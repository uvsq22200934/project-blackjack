import random
import tkinter


"""listes et variables"""


"""p = pique, co = coeur, t = trèfle, ca = carreau"""
valeurs = {'2p': 2, '3p': 3, '4p': 4, '5p': 5, '6p': 6, '7p': 7, '8p': 8,
           '9p': 9, '10p': 10, 'Vp': 10, 'Dp': 10, 'Rp': 10, 'Ap': 11,
           '2co': 2, '3co': 3, '4co': 4, '5co': 5, '6co': 6, '7co': 7,
           '8co': 8, '9co': 9, '10co': 10, 'Vco': 10, 'Dco': 10, 'Rco': 10,
           'Aco': 11,
           '2t': 2, '3t': 3, '4t': 4, '5t': 5, '6t': 6, '7t': 7, '8t': 8,
           '9t': 9, '10t': 10, 'Vt': 10, 'Dt': 10, 'Rt': 10, 'At': 11,
           '2ca': 2, '3ca': 3, '4ca': 4, '5ca': 5, '6ca': 6, ' 7ca': 7,
           '8ca': 8, '9ca': 9, '10ca': 10, 'Vca': 10, 'Dca': 10, 'Rca': 10,
           'Aca': 11}

paquet = list(valeurs.keys())
defausse = []
main_joueur = []
main_croupier = []

Aca = 0
Ap = 0
Ac = 0
At = 0


"""Graphismes"""


root = tkinter.Tk()
root.title('Blackjack 21')
"""root.state('zoomed')"""

root.geometry('500x400')
root.configure(bg="green")


cartes = tkinter.Canvas(root, width=60, height=100, bg="red4")
cartes.grid(column=2, row=2)


"""Def fonctions"""


def donne_initiale():
    # fonction qui distribue les cartes en début de partie
    global paquet
    global main_joueur
    nb_carte = 0
    while nb_carte < 2:
        main_joueur.append(paquet[0])
        del paquet[0]
        main_croupier.append(paquet[0])
        del paquet[0]
        nb_carte += 1
    print('main joueur', main_joueur, '\n main croupier', main_croupier)
    return main_joueur, main_croupier



"""bouton_nouvelle_partie['command'] = melange_distrib"""




def pioche(nb_carte, main, bouton=0):
    # fonction qui permet à un joueur de piocher un certain nombre de carte
    global main_joueur
    global paquet
    if bouton == 'bouton_pioche':
        main_joueur.append(paquet[0])
        del paquet[0]
    else:
        for i in range(nb_carte):
            main.append(paquet[0])
            del paquet[0]
    return main


def fin_manche():
    # fonction qui enlève les cartes des mains des joueurs et les place dans
    # la défausse
    print('debut fonction')
    global main_croupier
    global main_joueur
    global defausse
    while len(main_joueur) and len(main_croupier) != 0:
        print(main_joueur, main_croupier)
        defausse.append(main_joueur[0])
        del main_joueur[0]
        defausse.append(paquet[0])
        del main_croupier[0]
    print('mains croupier ', main_croupier, 'main joueur', main_joueur)
    return main_croupier, main_joueur


def score(main):
    # fonction qui permet de calculer la valeur d'une main
    points = 0
    global Aca
    global Ap
    global Aco
    global At
    for element in main:
        points += valeurs.get(element)
    for element in main:
        while points > 21:
            if 'Aca' in element and Aca == 0:
                Aca = 1
                points -= 10
            if 'Ap' in element and Ap == 0:
                Ap = 1
                points -= 10
            if 'At' in element and At == 0:
                At = 1
                points -= 10
            if 'Aco' in element and Ac == 0:
                Aco = 1
                points -= 10
            else:
                break
    return points


def croupier():
    # fonction qui définit les action du croupier en fonction de sa main
    global main_croupier
    points_croupier = score(main_croupier)
    while points_croupier <= 16:
        pioche(1, main_croupier)
        points_croupier = score(main_croupier)
    return main_croupier, points_croupier


def stand(main, bouton=0):
    # fonction qui permet au joueur de "stand"
    global stand_bouton
    points = 0
    score(main)
    if bouton == 'stand_bouton':
        print("je m'arrête")
    else:
        print("je continue")
    stand_bouton.destroy()
    return points


def hit(main):
    # fonction qui permet au joueur de "hit"
    pioche(1, main)
    return main


def doubble_down(main, mise=0):
    # fonction qui permet au joueur de "double down"
    points = 0
    mise *= 2
    pioche(1, main)
    score(main)
    return points


def surrender(mise=0):
    # fonction qui permet au joueur de "surrender"
    mise /= 2
    fin_manche()


"""Boutons"""


"""fonction et bouton pour lancer une partie"""

bouton_play = tkinter.Button(text='Jouer', fg = 'red')
bouton_play.grid(column=2, row=2)

#fonctions pour que les boutons qui ne s'utilisent qu'une fois apparaisaent chacun leur tour pour ne pas encombrer la fenêtre

bouton_melanger = tkinter.Button(text='Mélanger', fg = 'blue', command = random.shuffle(paquet))
def ordre_boutons(event):
    global bouton_play
    global bouton_melanger

    if event.widget == bouton_play:
        bouton_play.destroy()
        
        bouton_melanger.grid(column=2, row=3) 
  
bouton_play.bind('<Button-1>', ordre_boutons)

bouton_donne_initiale = tkinter.Button(text='Donne initiale', fg = "blue", command = donne_initiale)
def ordre_boutons2(event):
    global bouton_melanger
    global bouton_donne_initiale
    if event.widget == bouton_melanger:
        bouton_melanger.destroy()

        bouton_donne_initiale.grid(column=2, row=3)

bouton_melanger.bind('<Button-1>',ordre_boutons2)

def ordre_boutons3(event):
    global bouton_donne_initiale
    if event.widget == bouton_donne_initiale:
        cc1['bg'] = 'red4'
        cc2['bg'] = 'red4'
        cj1['bg'] = 'white'
        cj2['bg'] = 'white'
        bouton_donne_initiale.destroy()

        bouton_pioche = tkinter.Button(bg='white', text='Pioche')
        bouton_pioche.grid(column=2, row=18)
        bouton_pioche.bind('<Button-1>', lambda e: pioche(2,main_joueur, 'bouton_pioche'))

        bouton_score = tkinter.Button(bg='white', text='Score', command=lambda: score(main_joueur))
        bouton_score.grid(column=1, row=18)    

        stand_bouton= tkinter.Button(bg ='salmon', command= stand, text = 'Stand')
        stand_bouton.grid(column = 3, row = 18)
        stand_bouton.bind("<Button-1>", lambda e : stand(main_joueur, 'stand_bouton'))
        
bouton_donne_initiale.bind('<Button-1>',ordre_boutons3)




bouton_print = tkinter.Button(text='print',fg = 'green')
bouton_print.grid(column=5, row=18)
bouton_print.bind('<Button-1>', lambda e: print(paquet))

bouton_fin_manche = tkinter.Button(text='test fin manche', fg = 'green')
bouton_fin_manche.grid(column=5, row=20)
bouton_fin_manche.bind('<Button-1>', lambda e: fin_manche())


bouton_score = tkinter.Button(text='croupier test', fg = 'green', command=croupier)
bouton_score.grid(column=5, row=19)





""" mise du jeu """


mise_totale = 0
mise = {'jeton_rouge': 10, 'jeton_bleu': 25, 'jeton_vert': 50,
        'jeton_noir': 100}

"""le but de ma fonction serait d'appuyer sur ke bouton mise, pour faire \
    apparaitre des boutons sur les jetons, qui incrémente la valeur de la mise\
        totale."""

mise = tkinter.Label(root, text = "Mise:", bg = 'green',fg = 'white')
mise.grid(column=3, row = 2)
valeur_mise= tkinter.Label(root, text = '', bg = 'green', fg = 'white')
valeur_mise.grid(column =4, row = 2)


jeton_vert = tkinter.Canvas(root, bg='forest green', width=15, height=15)
jeton_vert.grid(column=3, row=14)

jeton_bleu = tkinter.Canvas(root, bg='medium blue', width=15, height=15)
jeton_bleu.grid(column=1, row=14)

jeton_rouge = tkinter.Canvas(root, bg='red', width=15, height=15)
jeton_rouge.grid(column=0, row=14)

jeton_noir = tkinter.Canvas(root, bg='black', width=15, height=15)
jeton_noir.grid(column=4, row=14)

def mise_rouge(event):
    global mise_totale
    if event.widget == jeton_rouge:
        mise_totale+=10
        valeur_mise['text'] = mise_totale
    return mise_totale
jeton_rouge.bind('<Button-1>', mise_rouge)

def mise_bleu(event):
    global mise_totale
    if event.widget == jeton_bleu:
        mise_totale+=25
        valeur_mise['text'] = mise_totale
    return mise_totale
jeton_bleu.bind('<Button-1>', mise_bleu)

def mise_vert(event):
    global mise_totale
    if event.widget == jeton_vert:
        mise_totale+=50
        valeur_mise['text'] = mise_totale
    return mise_totale
jeton_vert.bind('<Button-1>', mise_vert)

def mise_noir(event):
    global mise_totale
    if event.widget == jeton_noir:
        mise_totale+=100
        valeur_mise['text'] = mise_totale
    return mise_totale
jeton_noir.bind('<Button-1>', mise_noir)



'''interface graphique'''

# interface emplacement des cartes 1 et 2 du joueur
cj1 = tkinter.Canvas(root, width=60, height=100, bg='dark green')
cj1.grid(column=3, row=3)
cj2 = tkinter.Canvas(root, width=60, height=100, bg='dark green')
cj2.grid(column=4, row=3)

# interface emplacement des cartes 1 et 2 du croupier
cc1 = tkinter.Canvas(root, width=60, height=100, bg='dark green')
cc1.grid(column=0, row=3)
cc2 = tkinter.Canvas(root, width=60, height=100, bg='dark green')
cc2.grid(column=1, row=3)

# texte qui définit le côté du croupier
labelc = tkinter.Label(root, text="CROUPIER", font=("helvetica", "15"),bg = "green",fg="black")
labelc.grid(column=0, row=0)

# texte qui définit le côté du joueur
labelj = tkinter.Label(root, text="JOUEUR1", font=("helvetica", "15"),bg="green", fg ="black")
labelj.grid(column=4, row=0)


root.mainloop()